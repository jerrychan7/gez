"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["931"],{4551:function(n,e,r){r.r(e),r.d(e,{default:function(){return a}});var o=r(1549),t=r(6603);function s(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code"},(0,t.ah)(),n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.h1,{id:"moduleconfig",children:["ModuleConfig",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#moduleconfig",children:"#"})]}),"\n",(0,o.jsxs)(e.h2,{id:"类型",children:["类型",(0,o.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#类型",children:"#"})]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-ts",children:'export declare enum PathType {\n    npm = "npm:",\n    root = "root:"\n}\nexport interface ModuleConfig {\n    /**\n     * 对外导出的文件\n     * 必须以 npm: 或 root: 开头\n     * npm:开头代表 node_modules 的依赖\n     * root:开头代表项目内root目录下的文件\n     * 例如:\n     *   npm:vue\n     *   root:src/routes\n     *   root:src/[filename]\n     */\n    exports?: string[];\n    /**\n     * 导入的模块基本配置\n     */\n    imports?: Record<string, string>;\n    /**\n     * 设置项目的外部依赖\n     * 例如：\n     * {\n     *  "vue": "ssr-npm/vue"\n     * }\n     */\n    externals?: Record<string, string>;\n}\nexport interface ParsedModuleConfig {\n    /**\n     * 当前的服务名字\n     */\n    name: string;\n    /**\n     * 当前服务运行的根目录\n     */\n    root: string;\n    /**\n     * 对外导出的文件\n     */\n    exports: {\n        /**\n         * npm:*\n         * root:src/*\n         * root:src/routes/index.ts\n         */\n        name: string;\n        /**\n         * 路径的类型\n         */\n        type: PathType;\n        /**\n         * ssr-demo/npm/vue\n         * ssr-demo/src/routes\n         * ssr-demo/src/routes/index\n         */\n        importName: string;\n        /**\n         * ./npm/vue\n         * ./src/routes\n         */\n        exportName: string;\n        /**\n         * vue\n         * ./src/routes.ts\n         */\n        exportPath: string;\n        /**\n         * vue\n         * ssr-demo/src/routes/index\n         */\n        externalName: string;\n    }[];\n    /**\n     * 导入的外部服务\n     */\n    imports: {\n        /**\n         * 外部服务名称\n         */\n        name: string;\n        /**\n         * 本地路径\n         * 用于读取依赖 和 存放远程下载的依赖\n         */\n        localPath: string;\n    }[];\n    /**\n     * 外部依赖\n     */\n    externals: Record<string, {\n        match: RegExp;\n        import?: string;\n    }>;\n}\n/**\n * 解析模块配置\n * @param name 当前运行服务的名字\n * @param root 当前运行服务的根路径\n * @param config 模块的配置\n * @returns\n */\nexport declare function parseModuleConfig(name: string, root: string, config?: ModuleConfig): ParsedModuleConfig;\n\n'})})]})}function i(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(s,{...n})}):s(n)}let a=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["api%2Fcore%2Fmodule-config.mdx"]={toc:[{text:"类型",id:"类型",depth:2}],title:"ModuleConfig",frontmatter:{}}}}]);