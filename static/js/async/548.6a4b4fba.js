"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["548"],{5892:function(e,n,t){t.r(n),t.d(n,{default:function(){return p}});var r=t(1549),s=t(6603);function a(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"htmlapp",children:["HtmlApp",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#htmlapp",children:"#"})]}),"\n",(0,r.jsxs)(n.h2,{id:"类型",children:["类型",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#类型",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import type { Gez } from '@gez/core';\nimport { type SwcLoaderOptions } from '@rspack/core';\nimport { type RspackAppOptions } from './app';\nimport type { BuildTarget } from './build-target';\nimport { RSPACK_LOADER } from './loader';\nexport interface RspackHtmlAppOptions extends RspackAppOptions {\n    /**\n     * CSS 输出到 css 文件还是 js 文件中，默认为 css，设置 为 false，则关闭 css 相关的 loader 规则，需要你手动配置。\n     */\n    css?: 'css' | 'js' | false;\n    /**\n     * 你可以选择重写一部分 loader 的。比如把 style-loader 替换成 new URL(import.meta.resolve('vue-style-loader')).pathname\n     */\n    loaders?: Partial<Record<keyof typeof RSPACK_LOADER, string>>;\n    /**\n     * 透传 https://github.com/webpack-contrib/style-loader\n     */\n    styleLoader?: Record<string, any>;\n    /**\n     * 透传 https://github.com/webpack-contrib/css-loader\n     */\n    cssLoader?: Record<string, any>;\n    /**\n     * 透传 https://github.com/webpack-contrib/less-loader\n     */\n    lessLoader?: Record<string, any>;\n    /**\n     * 透传 https://github.com/yenshih/style-resources-loader\n     */\n    styleResourcesLoader?: Record<string, any>;\n    /**\n     * 透传 https://rspack.dev/guide/features/builtin-swc-loader\n     */\n    swcLoader?: SwcLoaderOptions;\n    /**\n     * 透传 DefinePlugin 的值 https://rspack.dev/plugins/webpack/define-plugin\n     */\n    definePlugin?: Record<string, string | Partial<Record<BuildTarget, string>>>;\n    /**\n     * 构建目标\n     */\n    target?: {\n        /**\n         * 浏览器的构建目标\n         */\n        web?: string[];\n        /**\n         * nodejs的构建目标\n         */\n        node?: string[];\n    };\n}\nexport declare function createRspackHtmlApp(gez: Gez, options?: RspackHtmlAppOptions): Promise<import(\"@gez/core\").App>;\n\n"})})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}let p=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["api%2Frspack%2Fhtml-app.mdx"]={toc:[{text:"类型",id:"类型",depth:2}],title:"HtmlApp",frontmatter:{}}}}]);